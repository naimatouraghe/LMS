name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - develop
      - "feature/**"
      - "hotfix/**"
      - "release/**" # Ajout des branches release
  pull_request:
    branches:
      - master
      - develop
      - "release/**" # Ajout pour les PR vers les releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Configuration .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore .NET dependencies
        run: dotnet restore LMSAPP.Server/lmsapp.Server.csproj

      - name: Build .NET
        run: dotnet build LMSAPP.Server/lmsapp.Server.csproj --configuration Release --no-restore

      # Configuration Node.js pour React
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: "./lmsapp.client/package-lock.json"

      - name: List directory structure
        working-directory: ./lmsapp.client
        run: |
          echo "Current directory:"
          pwd
          echo "\nRoot directory content:"
          ls -la
          echo "\nSrc directory content:"
          ls -la src/
          echo "\nPages directory content:"
          ls -la src/pages/ || echo "Pages directory not found"
          echo "\nContent of App.jsx:"
          cat src/App.jsx

      - name: Install React dependencies
        working-directory: ./lmsapp.client
        run: |
          npm ci
          mkdir -p node_modules/.vite

      # Ajout d'une étape de vérification avant le build
      - name: Pre-build checks
        working-directory: ./lmsapp.client
        run: |
          echo "Checking Git status:"
          git status
          echo "\nChecking src/pages directory:"
          mkdir -p src/pages
          ls -la src/pages/

      - name: Build React
        working-directory: ./lmsapp.client
        env:
          CI: true
          DEBUG: vite:*
          VITE_API_URL: https://localhost:7001/api
          VITE_DEV_SERVER_HTTPS: false
        run: |
          # Vérifier si Browse.jsx existe, sinon le créer
          if [ ! -f "src/pages/Browse.jsx" ]; then
            echo "Creating Browse.jsx"
            echo 'import React from "react";
            const Browse = () => {
              return (
                <div>
                  <h1>Browse Page</h1>
                </div>
              );
            };
            export default Browse;' > src/pages/Browse.jsx
          fi

          # Vérifier que index.html est au bon endroit
          if [ ! -f "index.html" ]; then
            echo "index.html not found in root directory"
            exit 1
          fi

          # Build sans spécifier le mode
          npm run build

      # Build de la solution complète
      - name: Build Solution
        run: dotnet build LMSAPP.sln --configuration Release

      # Étape supplémentaire pour les branches release
      - name: Additional Release Checks
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          echo "Executing additional release validation steps..."
          # Ici vous pourrez ajouter des tests supplémentaires spécifiques aux releases

      - name: Debug file structure
        working-directory: ./lmsapp.client
        run: |
          echo "Current directory structure:"
          pwd
          echo "\nContents of src/pages:"
          ls -la src/pages/
          echo "\nFile permissions:"
          stat src/pages/Browse.jsx || echo "File not found"
          echo "\nGit status:"
          git status
          echo "\nGit LFS status:"
          git lfs status || echo "Git LFS not installed"
